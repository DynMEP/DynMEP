### 2. Lighting Fixture Placement üí°
**Automate_Lighting_Fixture_Placement.py** | **Automate_Lighting_Fixture_Placement.dyn**  

Automate NEC 2023-compliant lighting placement with this Python/Dynamo script for Revit 2025, saving 6‚Äì10 hours per project. It places fixtures in rooms using grid and boundary logic, supports DIALux CSV integration, and ensures ceiling-hosted installations per NEC 410.36(A). MEP firms benefit from precise fixture positioning, avoiding wall conflicts, with detailed CSV outputs and logs for compliance verification. Available at github.com/DynMEP/DynMEP/tree/main/scripts, this script enhances design accuracy and efficiency, streamlining lighting workflows and delivering code-compliant, high-quality MEP projects with minimal manual effort.  

- `.py`: For developers, paste into Python Script node.  
- `.dyn`: Plug-and-play, open in Dynamo.

### 4. Panel Schedule Generator ‚ö°Ô∏è
**Panel_Schedule_Generator_Dynamo.py** | **Panel_Schedule_Generator_Dynamo.dyn**  

Generate NEC-compliant panel schedules in Revit 2025 with this Python/Dynamo script, saving 10‚Äì15 hours per project. It automates circuit sorting and voltage correction, producing detailed CSV schedules for MEP electrical designs. With robust error handling, it ensures accurate load and current data, enhancing project reliability. Available at github.com/DynMEP/DynMEP/tree/main/scripts, this script streamlines MEP workflows, reducing manual effort and ensuring compliance with NEC standards. Boost efficiency and deliver high-quality electrical documentation with this essential tool for modern MEP firms.  

- `.py`: For developers, paste into Python Script node.  
- `.dyn`: Plug-and-play, open in Dynamo.
